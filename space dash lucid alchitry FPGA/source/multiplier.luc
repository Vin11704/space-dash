module multiplier #(
    SIZE = 16 : SIZE > 0
    ) (
    input a[SIZE],
    input b[SIZE],
    output mul[SIZE]
  ) {
  
  fa fa[120];
  var i, j;
  var current_row_fa_index;
  var previous_row_fa_index;
  
  always { 
  //row 0 + row 1
  //1b output
  mul[0] = a[0] & b[0];
  
  for (i=0; i<SIZE-1; i++){ //i is fa index 
    fa.a[i] = a[i] & b[1];
    fa.b[i] = a[i+1] & b[0];
    if (i==0){
      fa.ci[i] = b0;
    }
    else{
    fa.ci[i] = fa.co[i-1];
    }
  }
  // 1b output
  mul[1] = fa.s[0];
  previous_row_fa_index = 0; //start from 0
  current_row_fa_index = SIZE-1; //start from 31

  for (i=2; i<SIZE; i++){
    for(j=0; j<SIZE-i; j++){
      fa.a[current_row_fa_index + j] = a[j] & b[i];
      fa.b[current_row_fa_index + j] = fa.s[previous_row_fa_index + j + 1];
      if (j == 0){
        fa.ci[current_row_fa_index + j] = b0;
        }
      else{
        fa.ci[current_row_fa_index + j] = fa.co[current_row_fa_index + j - 1];
        }
    }
    previous_row_fa_index = current_row_fa_index;
    current_row_fa_index = previous_row_fa_index + j;
    //1b output
    mul[i] = fa.s[previous_row_fa_index];
    } 
  
  }
}
