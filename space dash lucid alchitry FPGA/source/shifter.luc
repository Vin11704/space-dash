module shifter #(
  SIZE = 16 : SIZE > 0
  ) (
    input a[SIZE],
    input b[$clog2(SIZE)],
    input alufn_signal[6],
    output shift[SIZE]
  ) { 
  
  left_shift left_shift(#SIZE(SIZE));
  right_shift right_shift(#SIZE(SIZE));
  right_shift_A sra(#SIZE(SIZE));

  always {
  //
    left_shift.a = 0;
    left_shift.b = 0;
    shift = left_shift.shift;
    right_shift.a = 0;
    right_shift.b = 0;
    sra.a = 0;
    sra.b = 0;
    
    case(alufn_signal[1:0]){
      2b00: left_shift.a = a;
          left_shift.b = b;
          shift = left_shift.shift; 
          //shift = a << b;
      2b01: right_shift.a = a;
          right_shift.b = b;
          shift = right_shift.shift;
          //shift = a >> b;
      2b11: sra.a = a;
          sra.b = b;
          shift = sra.shift;
          //shift = $signed(a)>>>b;
      default:
        shift = a;
    }
      //2b00: shift left 
      //2b01: shift right
      //2b11: shift right with sign extension (arithmetic)

  }
    
}


